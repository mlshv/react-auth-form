{"version":3,"sources":["components/Button/Button.module.css","components/PasswordInput/PasswordInput.module.css","components/Spinner/Spinner.module.css","components/SrOnly/SrOnly.module.css","components/EmailInput/EmailInput.module.css","errors.ts","components/Spinner/Spinner.tsx","components/Button/Button.tsx","components/icons/EyeIcon.tsx","components/icons/CrossedEyeIcon.tsx","components/SrOnly/SrOnly.tsx","components/PasswordInput/PasswordInput.tsx","components/EmailInput/EmailInput.tsx","components/AuthForm/AuthForm.tsx","App.tsx","index.tsx","components/AuthForm/AuthForm.module.css"],"names":["module","exports","ValidationError","Error","NetworkError","Spinner","className","cn","styles","root","Button","inProgress","children","props","transparent","spinner","EyeIcon","width","height","viewBox","fill","xmlns","d","clipRule","fillRule","CrossedEyeIcon","stroke","y2","x2","y1","x1","strokeWidth","SrOnly","as","Tag","PasswordInput","error","innerRef","useState","isPasswordShown","setIsPasswordShown","passwordInputWrap","id","passwordInput","ref","type","autoComplete","Boolean","showPasswordButton","hidden","value","role","tabIndex","title","onClick","e","preventDefault","v","EmailInput","AuthForm","initialValues","email","password","onSubmit","rootRef","useRef","emailInputRef","passwordInputRef","useEffect","current","focus","shakeForm","useCallback","classList","add","shake","setTimeout","remove","validateOnBlur","validate","values","search","formError","a","setSubmitting","setErrors","console","message","isSubmitting","validateForm","handleSubmit","name","field","meta","fieldWrap","fieldLabel","onKeyPress","key","touched","form","validationErrorText","validationErrorPlaceholder","then","mockSubmitResponse","Promise","resolve","responses","randomResponseIndex","Math","floor","random","length","App","setEmail","style","margin","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45f6b03b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__2bb-J composes_focusable__1AhT7\",\"children\":\"Button_children__2TNlj\",\"transparent\":\"Button_transparent__1mzLx\",\"spinner\":\"Button_spinner__1euk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordInputWrap\":\"PasswordInput_passwordInputWrap__2oQpz\",\"passwordInput\":\"PasswordInput_passwordInput__flbWz composes_textInput__1c1o6 composes_focusable__1AhT7\",\"showPasswordButton\":\"PasswordInput_showPasswordButton__3dIi7\",\"hidden\":\"PasswordInput_hidden__3D0Ty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Spinner_root__14r2h\",\"spinner\":\"Spinner_spinner__1Neu5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SrOnly_root__KqQNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"EmailInput_root__1fFcK composes_textInput__1c1o6 composes_focusable__1AhT7\"};","export class ValidationError extends Error {}\nexport class NetworkError extends Error {}\n","import React from 'react'\nimport cn from 'classnames'\nimport styles from './Spinner.module.css'\n\ntype Props = {\n  className?: string\n}\n\nconst Spinner: React.FC<Props> = ({ className }) => {\n  return <div className={cn(styles.root, className)} />\n}\n\nexport default Spinner\n","import React, { ButtonHTMLAttributes } from 'react'\nimport cn from 'classnames'\nimport Spinner from '../Spinner'\nimport styles from './Button.module.css'\n\ntype Props = { inProgress?: boolean } & ButtonHTMLAttributes<HTMLButtonElement>\n\nconst Button: React.FC<Props> = ({ inProgress, children, ...props }) => {\n  return (\n    <button className={styles.root} {...props}>\n      <span className={cn(styles.children, { [styles.transparent]: inProgress })}>{children}</span>\n      {inProgress && <Spinner className={styles.spinner} />}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nconst EyeIcon: React.FC = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fill=\"currentColor\"\n        d=\"m23,12c0,0 -4.125,7 -11,7c-6.875,0 -11,-7 -11,-7c0,0 4.125,-7 11,-7c6.875,0 11,7 11,7zm-6,0c0,2.7614 -2.2386,5 -5,5c-2.76142,0 -5,-2.2386 -5,-5c0,-2.76142 2.23858,-5 5,-5c2.7614,0 5,2.23858 5,5zm-5,3c1.6569,0 3,-1.3431 3,-3c0,-1.6569 -1.3431,-3 -3,-3c-1.6569,0 -3,1.3431 -3,3c0,1.6569 1.3431,3 3,3z\"\n        clipRule=\"evenodd\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n\nexport default EyeIcon\n","import React from 'react'\n\nconst CrossedEyeIcon = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fill=\"currentColor\"\n        d=\"m23,12c0,0 -4.125,7 -11,7c-6.875,0 -11,-7 -11,-7c0,0 4.125,-7 11,-7c6.875,0 11,7 11,7zm-6,0c0,2.7614 -2.2386,5 -5,5c-2.76142,0 -5,-2.2386 -5,-5c0,-2.76142 2.23858,-5 5,-5c2.7614,0 5,2.23858 5,5zm-5,3c1.6569,0 3,-1.3431 3,-3c0,-1.6569 -1.3431,-3 -3,-3c-1.6569,0 -3,1.3431 -3,3c0,1.6569 1.3431,3 3,3z\"\n        clipRule=\"evenodd\"\n        fillRule=\"evenodd\"\n      />\n      <line stroke=\"currentColor\" y2=\"5.224889\" x2=\"18.574192\" y1=\"18.606878\" x1=\"4.841554\" strokeWidth=\"2.5\" />\n    </svg>\n  )\n}\n\nexport default CrossedEyeIcon\n","import React from 'react'\nimport styles from './SrOnly.module.css'\n\ntype Props = {\n  as?: keyof JSX.IntrinsicElements\n} & React.HTMLAttributes<HTMLOrSVGElement>\n\nconst SrOnly: React.FC<Props> = ({ as, ...props }) => {\n  const Tag = as ?? 'div'\n\n  return <Tag aria-live=\"polite\" className={styles.root} {...props} />\n}\n\nexport default SrOnly\n","import React, { useState } from 'react'\nimport cn from 'classnames'\n\nimport { CrossedEyeIcon, EyeIcon } from '../icons'\nimport styles from './PasswordInput.module.css'\nimport SrOnly from '../SrOnly'\n\ntype Props = {\n  error?: string | boolean\n  innerRef?: React.RefObject<HTMLInputElement>\n} & React.HTMLProps<HTMLInputElement>\n\nconst PasswordInput: React.FC<Props> = ({ error, innerRef, ...props }) => {\n  const [isPasswordShown, setIsPasswordShown] = useState(false)\n\n  return (\n    <div className={styles.passwordInputWrap}>\n      <SrOnly as=\"p\" id=\"password-text\">\n        {isPasswordShown ? 'Password shown.' : 'Password hidden.'}\n      </SrOnly>\n      <input\n        className={styles.passwordInput}\n        ref={innerRef}\n        type={isPasswordShown ? 'text' : 'password'}\n        autoComplete=\"current-password\"\n        aria-required=\"true\"\n        aria-describedby=\"password-alert\"\n        aria-invalid={Boolean(error)}\n        {...props}\n      />\n\n      <button\n        className={cn(styles.showPasswordButton, { [styles.hidden]: !props.value })}\n        type=\"button\"\n        role=\"switch\"\n        tabIndex={props.value ? 0 : -1}\n        aria-checked={isPasswordShown}\n        title={isPasswordShown ? 'Hide password' : 'Show password'}\n        aria-label={isPasswordShown ? 'Hide password' : 'Show password'}\n        onClick={(e) => {\n          e.preventDefault()\n          setIsPasswordShown((v) => !v)\n        }}\n      >\n        {isPasswordShown ? <CrossedEyeIcon /> : <EyeIcon />}\n      </button>\n    </div>\n  )\n}\n\nexport default PasswordInput\n","import React from 'react'\nimport styles from './EmailInput.module.css'\n\ntype Props = {\n  error?: string | boolean\n  innerRef?: React.RefObject<HTMLInputElement>\n} & React.HTMLProps<HTMLInputElement>\n\nconst EmailInput: React.FC<Props> = ({ error, innerRef, ...props }) => {\n  return (\n    <input\n      className={styles.root}\n      ref={innerRef}\n      autoComplete=\"email\"\n      aria-invalid={Boolean(error)}\n      {...props}\n    />\n  )\n}\n\nexport default EmailInput\n","import React, { useRef, useEffect, useCallback } from 'react'\nimport { Formik, Field, Form, FormikHelpers, FieldProps } from 'formik'\n\nimport { NetworkError, ValidationError } from '../../errors'\nimport Button from '../Button'\nimport PasswordInput from '../PasswordInput'\nimport styles from './AuthForm.module.css'\nimport EmailInput from '../EmailInput'\n\nexport type AuthFormValues = {\n  email: string\n  password: string\n  formError?: undefined\n}\n\ntype Props = {\n  initialValues?: AuthFormValues\n  onSubmit: (values: AuthFormValues) => Promise<void>\n}\n\nconst AuthForm: React.FC<Props> = ({\n  initialValues = {\n    email: '',\n    password: '',\n  },\n  onSubmit,\n}) => {\n  const rootRef = useRef<HTMLFormElement>(null)\n  const emailInputRef = useRef<HTMLInputElement>(null)\n  const passwordInputRef = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    emailInputRef?.current?.focus()\n  }, [])\n\n  const shakeForm = useCallback(() => {\n    rootRef.current?.classList.add(styles.shake)\n\n    setTimeout(() => {\n      rootRef.current?.classList.remove(styles.shake)\n    }, 400)\n  }, [])\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validateOnBlur={false}\n      validate={(values) => {\n        if (!values.email) {\n          return { formError: 'Please enter email' }\n        }\n\n        if (values.email.search(/@/) === -1) {\n          return { formError: 'Please enter valid email' }\n        }\n\n        if (!values.password) {\n          return { formError: 'Please enter password' }\n        }\n\n        return {}\n      }}\n      onSubmit={async (values: AuthFormValues, { setSubmitting, setErrors }: FormikHelpers<AuthFormValues>) => {\n        try {\n          await onSubmit(values)\n        } catch (e) {\n          console.error(e)\n\n          shakeForm()\n\n          if (e instanceof ValidationError) {\n            setErrors({ formError: e.message })\n          } else if (e instanceof NetworkError) {\n            setErrors({ formError: 'There was a network error, please try again' })\n          } else {\n            setErrors({ formError: 'Something went wrong' })\n          }\n        }\n\n        setSubmitting(false)\n      }}\n    >\n      {({ isSubmitting, validateForm, handleSubmit }) => (\n        <Form ref={rootRef}>\n          <h1>Sign in</h1>\n          <Field name=\"email\">\n            {({ field, meta }: FieldProps<string>) => (\n              <div className={styles.fieldWrap}>\n                <label>\n                  <span className={styles.fieldLabel}>Email</span>\n                  <EmailInput\n                    aria-required=\"true\"\n                    innerRef={emailInputRef}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        e.preventDefault()\n                        passwordInputRef?.current?.focus()\n                      }\n                    }}\n                    {...field}\n                  />\n                </label>\n              </div>\n            )}\n          </Field>\n          <Field name=\"password\">\n            {({ field, meta }: FieldProps<string>) => (\n              <div className={styles.fieldWrap}>\n                <label>\n                  <span className={styles.fieldLabel}>Password</span>\n                  <PasswordInput\n                    aria-required=\"true\"\n                    innerRef={passwordInputRef}\n                    error={meta.touched && meta.error}\n                    {...field}\n                  />\n                </label>\n              </div>\n            )}\n          </Field>\n          <Field name=\"formError\">\n            {({ form, meta }: FieldProps) =>\n              form.touched && meta.error ? (\n                <div role=\"alert\" aria-atomic=\"true\" id=\"email-alert\" className={styles.validationErrorText}>\n                  {meta.error}\n                </div>\n              ) : (\n                <div className={styles.validationErrorPlaceholder} />\n              )\n            }\n          </Field>\n          <Button\n            inProgress={isSubmitting}\n            type=\"submit\"\n            onClick={async (e) => {\n              e.preventDefault()\n\n              if (!isSubmitting) {\n                await validateForm().then(({ formError }) => {\n                  if (formError) {\n                    shakeForm()\n                  }\n                })\n\n                handleSubmit()\n              }\n            }}\n          >\n            Continue\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default AuthForm\n","import { useCallback, useState } from 'react'\nimport AuthForm, { AuthFormValues } from './components/AuthForm/AuthForm'\nimport { NetworkError, ValidationError } from './errors'\n\nasync function mockSubmitResponse() {\n  await new Promise((resolve) => {\n    setTimeout(resolve, 1000)\n  })\n\n  const responses = [\n    () => {\n      // ok\n    },\n    () => {\n      throw new NetworkError()\n    },\n    () => {\n      throw new ValidationError('Incorrect login or password')\n    },\n    () => {\n      throw new Error('Woops!')\n    },\n  ]\n\n  const randomResponseIndex = Math.floor(Math.random() * responses.length)\n\n  return responses[randomResponseIndex]()\n}\n\nfunction App() {\n  const [email, setEmail] = useState<string>()\n\n  const handleSubmit = useCallback(async (values: AuthFormValues) => {\n    await mockSubmitResponse()\n\n    setEmail(values.email)\n  }, [])\n\n  return (\n    <div className=\"App\" style={{ width: 300, margin: '0 auto' }}>\n      {email ? (\n        <div>\n          <p>Logged in as {email}</p>\n          <button onClick={() => setEmail(undefined)}>Log out</button>\n        </div>\n      ) : (\n        <AuthForm onSubmit={handleSubmit} />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldWrap\":\"AuthForm_fieldWrap__2w2BA\",\"fieldLabel\":\"AuthForm_fieldLabel__1pLfC\",\"validationErrorText\":\"AuthForm_validationErrorText__3IDb5\",\"validationErrorPlaceholder\":\"AuthForm_validationErrorPlaceholder__wD0IP\",\"shake\":\"AuthForm_shake__18acA\"};"],"sourceRoot":""}